import os
import glob
from matplotlib import pyplot as plt
from IPython.display import display, clear_output
import cv2

# Directorios de entrada
image_dir = "RGB Backup/images"
mask_dir = "RGB Backup/masks"

# Obtener rutas de las imágenes y máscaras
image_paths = sorted(glob.glob(os.path.join(image_dir, "*.tif")))
mask_paths = sorted(glob.glob(os.path.join(mask_dir, "*.tif")))

# Verificar que tenemos el mismo número de imágenes y máscaras
assert len(image_paths) == len(mask_paths), "El número de imágenes y máscaras no coincide."

# Función para visualizar imágenes con sus máscaras
def visualize_images_with_masks(image_paths, mask_paths):
    for i, (image_path, mask_path) in enumerate(zip(image_paths, mask_paths), 1):
        clear_output(wait=True)  # Limpiar la salida para mostrar solo la imagen actual
        print(f"Cargando imagen {i}/{len(image_paths)}...")

        # Leer la imagen y la máscara
        image = cv2.imread(image_path)
        mask = cv2.imread(mask_path)

        # Mostrar la imagen y la máscara
        plt.figure(figsize=(10, 5))
        plt.subplot(1, 2, 1)
        plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
        plt.title('Imagen')
        plt.axis('off')

        plt.subplot(1, 2, 2)
        plt.imshow(cv2.cvtColor(mask, cv2.COLOR_BGR2RGB))
        plt.title('Máscara')
        plt.axis('off')

        plt.suptitle(f'Imagen {i}')
        plt.show()
        
        input("Presiona Enter para cargar la siguiente imagen...")

# Visualizar todas las imágenes con sus máscaras
visualize_images_with_masks(image_paths, mask_paths)
